{
/*
	// Place your snippets for JavaScript React here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/

	"import react": {
		"prefix": "imr",
		"body": [
			"import ${1:React} from '${2:react}';"
		],
		"description": "Import react files"
  },
  "create function declaration no param": {
		"prefix": "func",
		"body": [
      "${1:function}($2) {",
        " $3",
      "}" 
		],
		"description": "create a funciton declartion that has no parameters"
	},
	"console log": {
		"prefix": "clg",
		"body": [
			"console.log(${1:test});"
		],
		"description": "output console log"
	}, 
	"class extend component": {
		"prefix": "cec",
		"body": [
      "class ${1:class} extends Component {",
      "  $2",
      "}"
		],
		"description": "output console log"
  },
  "create render with return": {
		"prefix": "retren",
		"body": [
      "render() {",
      " return(",
      "   $1",
      " );",
      "}"
		],
		"description": "create a render function with a return"
  },
  "export default component": {
		"prefix": "exdc",
		"body": [
      "export default ${1:component}"
		],
		"description": "export component default"
  },
  "react expression for this.props": {
		"prefix": "tps",
		"body": [
      "{this.props.${1}}"
		],
		"description": "export component default"
  }, 
  "onclick attrib": {
		"prefix": "foncclick",
		"body": [
      "onClick={${1:() => $2 }}",
		],
		"description": "add onclick attrib"
  },
  "constructor state": {
		"prefix": "prconstruct",
		"body": [
      "constructor(props) {",
      "  super(props);",
      "  this.state = {",
      "    $1",
      "  };",
      "}"
		],
		"description": "contructor with props"
  },
  "this set state": {
		"prefix": "tss",
		"body": [
      "this.setState($1);"
		],
		"description": "set state on this"
  },

}